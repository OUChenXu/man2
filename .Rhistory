install.packages("vcd")
# Example: Play Craps
# Step 1: Simulate Data first
set.seed(123456)
x<-sample(1:6,100000, replace = T)
y<-sample(1:6,100000, replace = T)
# Step 2: Calculate counts for each cell
mytable<-table(x,y)
# Alternatively, combine these two into a data frame
data<-as.data.frame(cbind(x,y))
mytable<-xtabs(~ x+y, data=data)
# Step 3: Cell proportions
prop.table(mytable)
set.seed(123456)
x<-sample(0:1,100000, replace = T, prob=c(.2,.8))
data<-data.frame(x, y=NA)
data$y[data$x == 1] <- sample(0:1, sum(data$x == 1), replace = T, prob=c(0.7,0.3))
data$y[data$x == 0] <- sample(0:1, sum(data$x == 0), replace = T, prob=c(0.1,0.9))
mytable<-xtabs(~ x+y, data=data)
mytable
prop.table(mytable)
mosaic(mytable, shade=TRUE, legend=TRUE)
library("mosaic")
install.packages("mosaic")
mosaic(mytable, shade=TRUE, legend=TRUE)
library("mosaic")
mosaic(mytable, shade=TRUE, legend=TRUE)
library(vcd)
mosaic(mytable, shade=TRUE, legend=TRUE)
set.seed(123456)
x<-sample(1:6,100000, replace = T)
y<-sample(1:6,100000, replace = T)
# Step 2: Calculate counts for each cell
mytable<-table(x,y)
# Alternatively, combine these two into a data frame
data<-as.data.frame(cbind(x,y))
mytable<-xtabs(~ x+y, data=data)
# Step 3: Cell proportions
prop.table(mytable)
library(vcd)
mosaic(mytable, shade=TRUE, legend=TRUE)
# Example 2: Super Bowl and White Jerseys
mytable <- matrix(c(33,19,19,33),ncol=2,byrow=TRUE)
mytable<-as.table(mytable)
mytable
chisq.test(mytable)
fisher.test(mytable)
# Example 2: Super Bowl and White Jerseys
mytable <- matrix(c(33,19,19,33),ncol=2,byrow=TRUE)
mytable<-as.table(mytable)
mytable
chisq.test(mytable)
# Alternative Tests
fisher.test(mytable)
mantelhaen.test(mytable)
mytable <- matrix(c(33,19,19,33),ncol=2,byrow=TRUE)
mytable<-as.table(mytable)
mytable
library(vcd)
assocstats(mytable)
library(MASS)
# Example 1: Smoking habit and Exercise Levels
mytable <- table(survey$Smoke, survey$Exer)
mytable
# Warning:
chisq.test(mytable)
# One solution
mytable<-cbind(mytable[,"Freq"],mytable[,"None"]+ mytable[,"Some"])
mytable
?chisq.test
cv.test = function(x,y) {
CV = sqrt(chisq.test(x, y, correct=FALSE)$statistic /
(length(x) * (min(length(unique(x)),length(unique(y))) - 1)))
print.noquote("CramÃ©r V / Phi:")
return(as.numeric(CV))
}
helpdata = read.csv("http://www.math.smith.edu/r/data/help.csv")
with(helpdata, cv.test(female, homeless)
)
helpdata <- read.csv("http://www.math.smith.edu/r/data/help.csv")
results <- chisq.test(mytable)
attr(results)
results$statistic
chisq.test(mytable)
sqrt(results$statistic/52)
assocstats(mytable)
mytable <- matrix(c(33,19,19,33),ncol=2,byrow=TRUE)
mytable<-as.table(mytable)
mytable
library(vcd)
assocstats(mytable)
sqrt(results$statistic/(52*2))
mytable
sqrt(results$statistic/(52*1))
?assocstats
sqrt(results$statistic/(52*(2-1/52-1)))
str(assocstats(mytable))
assocstats(mytable)$chisq_tests
chisq.test(mytable)
assocstats(mytable)$chisq_tests[1,2]
assocstats(mytable)$chisq_tests[2,1]
assocstats(mytable)$chisq_tests[2,1]/53
assocstats(mytable)$chisq_tests[2,1]/52
sqrt(assocstats(mytable)$chisq_tests[2,1])
sqrt(assocstats(mytable)$chisq_tests[2,1]/52)
sqrt(assocstats(mytable)$chisq_tests[2,1]/(52*(2-1/52-1)))
?getVecOcc
library("malariaAtlas")
?getVecOcc
library(MASS)
# Example 1: Smoking habit and Exercise Levels
mytable <- table(survey$Smoke, survey$Exer)
mytable
# Warning:
chisq.test(mytable)
mytable<-cbind(mytable[,"Freq"],mytable[,"None"]+ mytable[,"Some"])
mytable
mytable
chisq.test(mytable)
mytable <- matrix(c(33,19,19,33),ncol=2,byrow=TRUE)
mytable
chisq.test(mytable)
fisher.test(mytable)
library(quantmod)
# S&P 500 stock market index
# the date when VXX was available
getSymbols("SPY", from="2013-01-01")
# Equity Market Volatility
# track the S&P 500 VIX Short-Term
# Futures Index Total Return
getSymbols("VXX", from="2013-01-01")
cov(spy_returns, vxx_returns)/(sd(spy_returns)*sd(vxx_returns))
spy<-SPY$SPY.Adjusted
spy_returns<- na.omit(diff(log(spy)))
vxx<-VXX$VXX.Adjusted
vxx_returns <- na.omit(diff(log(vxx)))
cov(spy_returns, vxx_returns)/(sd(spy_returns)*sd(vxx_returns))
cor.test(vxx_returns,spy_returns, alternative = "two.side")
set.seed(123456)
x<-rnorm(100)
x2<-x^2
cor.test(x,x2)
getSymbols("PEP")
getSymbols("COKE")
pepsi<-PEP$PEP.Adjusted
pepsi_returns<- na.omit(diff(log(pepsi)))
coke<-COKE$COKE.Adjusted
coke_returns<- na.omit(diff(log(coke)))
# Correlation
cor(pepsi_returns, coke_returns)
pepsi_returns<-as.vector(pepsi_returns)
coke_returns<-as.vector(coke_returns)
npdeptest(coke_returns,pepsi_returns,boot.num=30,method="summation")
library(np)
npdeptest(coke_returns,pepsi_returns,boot.num=30,method="summation")
